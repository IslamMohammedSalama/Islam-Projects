@mixin arrow($dir) {
	border: 20px solid;
	@if $dir == "top" {
		left: 50%;
		top: -40px;
		transform: translateX(-50%);
		border-color: red transparent transparent transparent;
	} @else if $dir == "bottom" {
		left: 50%;
		bottom: -40px;
		transform: translateX(-50%);
		border-color: transparent transparent red transparent;
	} @else if $dir == "right" {
		top: 50%;
		right: -40px;
		transform: translateY(-50%);
		border-color: transparent transparent transparent red;
	} @else if $dir == "left" {
		top: 50%;
		left: -40px;
		transform: translateY(-50%);
		border-color: transparent red transparent transparent;
	} @else {
		@error "Dir Not Found";
	}
}

.element {
	&:before {
		@include arrow("top");
	}
}

$grid-cols: 16;

@for $i from 1 through $grid-cols {
	.col-#{$i} {
		width: percentage(calc($i / $grid-cols));
	}
}

$names: "books" 20px red 18, "games" 30px green 18, "dvds" 20px blue;

@each $name, $padding, $color, $fs-size in $names {
	.#{$name} {
		padding: $padding;
		border-bottom: 2px solid $color;
		color: #444;
		font-size: if($fs-size, #{$fs-size}px, 16px);
	}
}

$init: 1;

@while $init <= 5 {
	.circle-#{$init * 100} {
		width: $init * 100px;
		height: $init * 100px;
		border-radius: calc(($init * 100px) / 2);
	}
	$init: $init + 1;
}

@for $i from 1 through 5 {
	.circle-#{$i * 100} {
		width: $i * 100px;
		height: $i * 100px;
		border-radius: calc(($i * 100px) / 2);
	}
}

// Write Mixin Code Here
@mixin placeholder {
	&.placeholder {
		@content;
	}
	&:-moz-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
}

// Using
textarea {
	@include placeholder {
		color: #777;
	}
}

// // Output
// textarea.placeholder {
// 	color: #777;
// }
// textarea:-moz-placeholder {
// 	color: #777;
// }
// textarea::-moz-placeholder {
// 	color: #777;
// }
// textarea:-ms-input-placeholder {
// 	color: #777;
// }
// textarea::-webkit-input-placeholder {
// 	color: #777;
// }

// Write Mixin Code Here
@mixin flex-center($width: 400px) {
	& {
		display: flex;
		justify-content: center;
		align-items: center;
		width: $width;
	}
}

// Using
.box-one {
	@include flex-center(400px);
}
.box-two {
	@include flex-center;
}

// Output
//   .box-one {
// 	display: flex;
// 	justify-content: center;
// 	align-items: center;
// 	width: 400px;
//   }

//   .box-two {
// 	display: flex;
// 	justify-content: center;
// 	align-items: center;
// 	width: 400px;
//   }
